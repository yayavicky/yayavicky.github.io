<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Vicky's Notes</title><link>https://yayavicky.github.io/</link><description>Recent content on Vicky's Notes</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Except where otherwise noted, content on this site is licensed under a [Creative Commons Attribution 4.0 International license](https://creativecommons.org/licenses/by-sa/4.0/).</copyright><lastBuildDate>Tue, 30 Nov 2021 11:12:48 +0800</lastBuildDate><atom:link href="https://yayavicky.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>群晖设置</title><link>https://yayavicky.github.io/env/nas/</link><pubDate>Tue, 30 Nov 2021 11:12:48 +0800</pubDate><guid>https://yayavicky.github.io/env/nas/</guid><description>直接使用套件中心 套件中心添加https://www.cphub.net 社区套件源，然后直接安装。
使用离线 ipk 文件。 打开 community package hub，选择你的固件型号：
下载 Easy Bootstrap Installer 与 iPKGui 两个套件安装包。
安装 Easy Bootstrap Installer 主要为 ipkg 或 opkg 环境，iPKGui 则为 ipkg 的图形界面。因此，我们需要先安装 Easy Bootstrap Installer 后安装 iPKGui 。　打开群晖 套件中心，选择 手动安装，选择刚才下载好的 Easy Bootstrap Installer spk 文件，依照提示安装后重启群晖即可。（需要注意的是，在装 Easy Bootstrap Installer 的过程中，由于会对源做刷新动作，而 ipkg 的源又被墙了，所以在网络状况不好的情况下，会非常慢。 ）　之后使用 ssh 连接并群晖获取 root 权限 ，执行 ipkg 能够正确执行后，依照前面方式在套件中心安装 iPKGui 的 spk 文件即可。至此，整个流程结束，完成 ipkg 的环境配置。
安装其他包 sudo /opt/bin/opkg update sudo /opt/bin/opkg install lsof sudo /opt/bin/lsof | grep deleted sudo kill -9 PID df -i df -h ls /dev/md* /dev/md0 /dev/md1 /dev/md2 sudo mdadm --detail /dev/md0 /dev/md1</description></item><item><title>Python Speed</title><link>https://yayavicky.github.io/thoughts/pythonspeed/</link><pubDate>Tue, 30 Nov 2021 11:07:27 +0800</pubDate><guid>https://yayavicky.github.io/thoughts/pythonspeed/</guid><description>What blocks Ruby, Python to get Javascript V8 speed?
What blocks Ruby, Python to get Javascript V8 speed?
Are there any Ruby / Python features that are blocking implementation of optimizations (e.g. inline caching) V8 engine has?
Python is co-developed by Google guys so it shouldn&amp;rsquo;t be blocked by software patents.
Or this is rather matter of resources put into the V8 project by Google.
Nothing.
Well, okay: money. (And time, people, resources, but if you have money, you can buy those.</description></item><item><title>Offlinepython</title><link>https://yayavicky.github.io/env/offlinepython/</link><pubDate>Tue, 30 Nov 2021 09:39:56 +0800</pubDate><guid>https://yayavicky.github.io/env/offlinepython/</guid><description>get help python.exe /? /passive : display progress without requiring user interaction /quiet : install/uninstall without displaying any UI /simple : prevent user customization /uninstall : remove python(without confirmation) /layout [directory] : pre-download all components /log [filename] : to specify log files location find other options
PrependPath =0 Add install and Scripts directories to PATH and .PY to PATHEXT InstallAllUsers = 0 Perform a system-wide installation. python-3.</description></item><item><title>Pdf Combine</title><link>https://yayavicky.github.io/code/pdfcombine/</link><pubDate>Tue, 30 Nov 2021 09:34:29 +0800</pubDate><guid>https://yayavicky.github.io/code/pdfcombine/</guid><description>import PyPDF2,os pdflist=[] path= &amp;#34;D:/temp/hebin/&amp;#34; dirs=os.listdir(path) for filename in dirs: if filename.endswith(&amp;#39;.pdf&amp;#39;): pdflist.append(filename) pdflist.sort(key=str.lower)#按照字母顺序对列表元素排序 pdfwriter=PyPDF2.PdfFileWriter() for filename in pdflist: pdffile=open(path+filename,&amp;#39;rb&amp;#39;) pdfreader=PyPDF2.PdfFileReader(pdffile) for page in range(1,pdfreader.numPages):#去除封面 pagepdf=pdfreader.getPage(page)#获取页面 pdfwriter.addPage(pagepdf)#添加页面 pdfoutput=open(&amp;#39;D:/temp/hebing.pdf&amp;#39;,&amp;#39;wb&amp;#39;) pdfwriter.write(pdfoutput) pdfoutput.close() import PyPDF2 import os def get_file_list(org_path): pdf_list = [] file_list = os.listdir(org_path) for file_name in file_list: if file_name.lower().endswith(&amp;#39;.pdf&amp;#39;): pdf_list.append(file_name) pdf_list.sort(key=str.lower) pdf_list = [os.path.join(org_path, item) for item in pdf_list] return pdf_list def write_pdf(org_pdfs, out_pdf): pdf_writer = PyPDF2.PdfFileWriter() org_handle_list = [] for pdf_file in org_pdfs: pdf_handle = open(pdf_file, &amp;#39;rb&amp;#39;) org_handle_list.</description></item><item><title>Vmware Auto Act</title><link>https://yayavicky.github.io/tools/vmware/</link><pubDate>Thu, 25 Nov 2021 08:58:02 +0800</pubDate><guid>https://yayavicky.github.io/tools/vmware/</guid><description>Vmware 开机 vmrun -T (ws|fusion|player) start &amp;#34;指定虚拟机vmx文件路径&amp;#34; [gui|nogui] vmrun -T ws start &amp;#34;D:\VirtualBox VMs\openwrt\openwrt.vmx&amp;#34; nogui ws 代表workstation, nogui 代表无界面后台运行。
1. 用组策略来实现 组合键(Windows键+R键) 在 “运行” 中输入 gpedit.msc 打开组策略编辑器。
在组策略中，依次选择
用户配置—Windows设置—脚本(登录|注销) 右边，名称下选择 “登录”
2. 命令创建一个快捷方式，将其放入启动文件夹 打开运行或者文件资源管理器，输入 shell:startup ，打开启动文件夹，或者直接打开目录 %appdata%\Microsoft\Windows\Start Menu\Programs\Startup ，将快捷方式放进去。
Vmware 关机 # 挂起 vmrun -T (ws|fusion|player) suspend &amp;#34;指定虚拟机vmx文件路径&amp;#34; # 关机 vmrun -T (ws|fusion|player) stop &amp;#34;指定虚拟机vmx文件路径&amp;#34; soft soft 不可漏，会使虚拟机执行操作系统指定的关机程序
gpedit.msc 本地计算机策略 - 计算机配置 - Windows设置 - 脚本 右侧选择关机 将需要执行的关机或挂起命令写入 bat 文件</description></item><item><title>Chocolatey</title><link>https://yayavicky.github.io/tools/chocolatey/</link><pubDate>Thu, 25 Nov 2021 08:47:44 +0800</pubDate><guid>https://yayavicky.github.io/tools/chocolatey/</guid><description>Chocolate 官网 管理员
Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString(&amp;#39;https://chocolatey.org/install.ps1&amp;#39;)) 常用包 choco install -y 7zip.install adobereader notepadplusplus.install tim everything choco install -y 7zip.install adobereader notepadplusplus.install googlechrome firefox vscode everything choco install 7zip.install -y choco install adobereader -y choco install notepadplusplus.install -y choco install googlechrome -y choco install firefox -y choco install everything -y choco install everything.portable -y choco install everythingtoolbar -y choco install vscode -y choco install python3 -y choco install git.</description></item><item><title>Net Card Check</title><link>https://yayavicky.github.io/env/netcardcheck/</link><pubDate>Wed, 17 Nov 2021 15:26:42 +0800</pubDate><guid>https://yayavicky.github.io/env/netcardcheck/</guid><description>Ubuntu查看有线网卡eth0和eth1分别对应网卡型号 查看网卡的型号: lspci | grep -i net 通过driver区分多个网卡的型号: ethtool -i eth0 Centos 查看网卡型号 安装lspci: yum install pciutils 查看网卡型号：lspci | grep Ethernet</description></item><item><title>VS Code</title><link>https://yayavicky.github.io/tools/vscode/</link><pubDate>Tue, 16 Nov 2021 16:07:38 +0800</pubDate><guid>https://yayavicky.github.io/tools/vscode/</guid><description>VS Code Go 扩展默认是使用大量的 Go 工具来提供各种功能的, 每个工具提供某个方面的能力, 比如代码提示是依靠 gocode 的.
不过微软在开发 VS Code 过程中, 定义一种协议, 语言服务器协议, Language Server Protocol.
这可是个好东西, 如果你需要开发编辑器或 IDE, 就不需要再为每种语言实现诸如自动完成, 代码提示等功能了, 直接利用 语言服务器协议 就行了.
gopls 就是官方的语言服务器, 当前处于 alpha 状态.
Remote Extensions Remote - SSH Remote - Containers Remote - WSL 安装 SSH Client： Get-WindowsCapability -Online | ? Name -like &amp;#39;OpenSSH*&amp;#39; Name : OpenSSH.Client~~~~0.0.1.0 State : NotPresent Name : OpenSSH.Server~~~~0.0.1.0 State : NotPresent Add-WindowsCapability -Online -Name OpenSSH.</description></item><item><title>Hugo</title><link>https://yayavicky.github.io/tools/hugo/</link><pubDate>Tue, 16 Nov 2021 11:53:29 +0800</pubDate><guid>https://yayavicky.github.io/tools/hugo/</guid><description>Windows install choco install hugo -y choco install hugo-extended -y hugo help documents quickstart offical quickstart public 软连接
mklink /j d:\code\web\public d:\code\web\Notes\public 本地预览的命令为 hugo server -D 生成生产版 public 的命令为 hugo 加上清理和压缩的参数，可以用 hugo --gc --minify --cleanDestinationDir。 添加新页面 hugo new name.md 自动发布 创建 yayavicky.github.io 仓库, public 将 yayavicky.github.io.source 仓库克隆到本地，开始初始化 Hugo 系统： # 克隆 source 仓库 git clone git@github.com:yayavicky/yayavicky.github.io.git # 进入仓库 cd yayavicky.github.io./ # 在当前目录生成 Hugo 源码 hugo new site .</description></item></channel></rss>