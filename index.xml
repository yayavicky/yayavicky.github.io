<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Vicky's Notes</title><link>https://yayavicky.github.io/</link><description>Recent content on Vicky's Notes</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Except where otherwise noted, content on this site is licensed under a [Creative Commons Attribution 4.0 International license](https://creativecommons.org/licenses/by-sa/4.0/).</copyright><lastBuildDate>Wed, 19 Jan 2022 08:28:20 +0800</lastBuildDate><atom:link href="https://yayavicky.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>SVG Resource</title><link>https://yayavicky.github.io/res/svg/</link><pubDate>Wed, 19 Jan 2022 08:28:20 +0800</pubDate><guid>https://yayavicky.github.io/res/svg/</guid><description>Font Awesome FortAwesome 官网 githug Font-Awesome Bootstrap icons Demo github bootstrap Ionicons &amp;lt;script src=&amp;#34;https://unpkg.com/ionicons@5.0.0/dist/ionicons.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;ion-icon name=&amp;#34;heart&amp;#34;&amp;gt;&amp;lt;/ion-icon&amp;gt; Ionicons 官网 github Ionicons css.gg &amp;lt;link href=&amp;#39;https://css.gg/css&amp;#39; rel=&amp;#39;nofollow &amp;#39;&amp;gt; &amp;lt;!-- UNPKG --&amp;gt; &amp;lt;link href=&amp;#39;https://unpkg.com/css.gg/icons/all.css&amp;#39; rel=&amp;#39;stylesheet&amp;#39;&amp;gt; &amp;lt;!-- jsDelivr --&amp;gt; &amp;lt;link href=&amp;#39;https://cdn.jsdelivr.net/npm/css.gg/icons/all.css&amp;#39; rel=&amp;#39;stylesheet&amp;#39;&amp;gt; css.gg 官网 github css.gg Feathericons Feathericons 官网 github feather Eva Icons npm i eva-icons Demo github eva Heroicon Demo github heroicons Remix Icon Apache License下的2149个漂亮的开源图标大集合。 有各种各样的图标可供选择，例如业务，通讯，财务，地图等等。</description></item><item><title>常用工具</title><link>https://yayavicky.github.io/tools/commontools/</link><pubDate>Sun, 02 Jan 2022 13:26:50 +0800</pubDate><guid>https://yayavicky.github.io/tools/commontools/</guid><description>机器配置 Chocolatey 系统激活 Vmware 群晖 软件开发 版本号管理 SVG 资源</description></item><item><title>Python</title><link>https://yayavicky.github.io/code/python/</link><pubDate>Thu, 09 Dec 2021 15:10:08 +0800</pubDate><guid>https://yayavicky.github.io/code/python/</guid><description>字典扩展类 原来需要这样用：dic['website'] = 'taobao.com' 有了这个类，可以这样用：dic.websites = 'taobao.com'
class EasyAccessDict(dict): def __getattr__(self,name): if name in self: return self[name] n=easyaccessdict() super().__setitem__(name, n) return n def __getitem__(self,name): if name not in self: super().__setitem__(name,nicedict()) return super().__getitem__(name) def __setattr__(self,name,value): super().__setitem__(name,value)</description></item><item><title>Win10fix</title><link>https://yayavicky.github.io/env/win10fix/</link><pubDate>Wed, 08 Dec 2021 13:29:35 +0800</pubDate><guid>https://yayavicky.github.io/env/win10fix/</guid><description>使用SFC修复Windows 10 sfc /scannow 使用DISM修复Windows 10 DISM /Online /Cleanup-Image /CheckHealth DISM/Online/Cleanup-Image/RestoreHealth/Source:repairSource\install.wim 使用命令提示符恢复出厂设置 systemreset-cleanpc 使用命令提示符进行系统还原 启用带命令提示符的安全模式
管理员帐户登录系统。打开cmd之后，请输入“rstrui.exe”，然后按“回车”继续。</description></item><item><title>Backup Files</title><link>https://yayavicky.github.io/code/backupfile/</link><pubDate>Wed, 08 Dec 2021 11:08:32 +0800</pubDate><guid>https://yayavicky.github.io/code/backupfile/</guid><description>$log_file_path=&amp;#34;D:\log\info_&amp;#34;+ (Get-Date -Format &amp;#34;yyyy-MM-dd&amp;#34;) + &amp;#34;.log&amp;#34; $error_log_file = &amp;#34;D:\log\error_&amp;#34;+ (Get-Date -Format &amp;#34;yyyy-MM-dd&amp;#34;) + &amp;#34;.log&amp;#34; $tar_dir_list=@(&amp;#34;D:\DailyBackup\KIS_JD&amp;#34;, &amp;#34;D:\DailyBackup\KIS_YP&amp;#34;) foreach($tar_dir in $tar_dir_list){ $file_list = get_file_list($tar_dir) cacl_sha256($file_list) } function write_log_file($message) { (Get-Date).ToString() +&amp;#34; - &amp;#34;+ $message &amp;gt;&amp;gt; $log_file_path } function write_error_log($message) { (Get-Date).ToString() +&amp;#34; - &amp;#34;+ $message &amp;gt;&amp;gt; $error_log_file } function get_file_list($dir_path, $exclude_extension = &amp;#39;.sha256&amp;#39;) { write_log_file(&amp;#34;begin check files under ${dir_path}&amp;#34;) $result = @() $file_list=(get-childitem $dir_path) Foreach($file_item in $file_list){ if ($file_item.Extension -ne $exclude_extension) { $result +=@($file_item) } } return $result } function cacl_sha256($file_list) { Foreach($file_item in $file_list) { $full_name = $file_item.</description></item><item><title>Utf8bom</title><link>https://yayavicky.github.io/env/utf8bom/</link><pubDate>Fri, 03 Dec 2021 08:46:17 +0800</pubDate><guid>https://yayavicky.github.io/env/utf8bom/</guid><description>UTF-8 + BOM编码方式一般会在windows操作系统中出现，比如WINDOWS自带的记事本等软件，在保存一个以UTF-8编码的文件时，会在文件开始的地方插入三个不可见的字符（0xEF 0xBB 0xBF，即BOM）。它是一串隐藏的字符，用于让记事本等编辑器识别这个文件是否以UTF-8编码。
import os def strip_remove_65279(file_path): with open(file_path, &amp;#39;r&amp;#39;, encoding=&amp;#39;utf-8&amp;#39;) as f: lines = f.readlines() dir_name, file_full_name = os.path.split(file_path) file_name, extension = os.path.splitext(file_full_name) new_file = os.path.join(dir_name, file_name + &amp;#34;_strip&amp;#34; + extension) with open(new_file, &amp;#39;a&amp;#39;, encoding=&amp;#39;utf-8&amp;#39;) as ff: for line in lines: line = line.replace(chr(65279), &amp;#39;&amp;#39;) ff.write(line) def replace_remove_65279(file_path): with open(file_path, &amp;#39;r&amp;#39;, encoding=&amp;#39;utf-8&amp;#39;) as f: lines = f.readlines() with open(file_path, &amp;#39;w&amp;#39;, encoding=&amp;#39;utf-8&amp;#39;) as ff: for line in lines: line = line.</description></item><item><title>群晖设置</title><link>https://yayavicky.github.io/env/nas/</link><pubDate>Tue, 30 Nov 2021 11:12:48 +0800</pubDate><guid>https://yayavicky.github.io/env/nas/</guid><description>直接使用套件中心 套件中心添加https://www.cphub.net 社区套件源，然后直接安装。
使用离线 ipk 文件。 打开 community package hub，选择你的固件型号：
下载 Easy Bootstrap Installer 与 iPKGui 两个套件安装包。
安装 Easy Bootstrap Installer 主要为 ipkg 或 opkg 环境，iPKGui 则为 ipkg 的图形界面。因此，我们需要先安装 Easy Bootstrap Installer 后安装 iPKGui 。　打开群晖 套件中心，选择 手动安装，选择刚才下载好的 Easy Bootstrap Installer spk 文件，依照提示安装后重启群晖即可。（需要注意的是，在装 Easy Bootstrap Installer 的过程中，由于会对源做刷新动作，而 ipkg 的源又被墙了，所以在网络状况不好的情况下，会非常慢。 ）　之后使用 ssh 连接并群晖获取 root 权限 ，执行 ipkg 能够正确执行后，依照前面方式在套件中心安装 iPKGui 的 spk 文件即可。至此，整个流程结束，完成 ipkg 的环境配置。
安装其他包 sudo /opt/bin/opkg update sudo /opt/bin/opkg install lsof sudo /opt/bin/lsof | grep deleted sudo kill -9 PID df -i df -h ls /dev/md* /dev/md0 /dev/md1 /dev/md2 sudo mdadm --detail /dev/md0 /dev/md1</description></item><item><title>Python Speed</title><link>https://yayavicky.github.io/thoughts/pythonspeed/</link><pubDate>Tue, 30 Nov 2021 11:07:27 +0800</pubDate><guid>https://yayavicky.github.io/thoughts/pythonspeed/</guid><description>What blocks Ruby, Python to get Javascript V8 speed?
What blocks Ruby, Python to get Javascript V8 speed?
Are there any Ruby / Python features that are blocking implementation of optimizations (e.g. inline caching) V8 engine has?
Python is co-developed by Google guys so it shouldn&amp;rsquo;t be blocked by software patents.
Or this is rather matter of resources put into the V8 project by Google.
Nothing.
Well, okay: money. (And time, people, resources, but if you have money, you can buy those.</description></item><item><title>Python 环境离线安装</title><link>https://yayavicky.github.io/env/offlinepython/</link><pubDate>Tue, 30 Nov 2021 09:39:56 +0800</pubDate><guid>https://yayavicky.github.io/env/offlinepython/</guid><description>get help python.exe /? /passive : display progress without requiring user interaction /quiet : install/uninstall without displaying any UI /simple : prevent user customization /uninstall : remove python(without confirmation) /layout [directory] : pre-download all components /log [filename] : to specify log files location find other options
PrependPath =0 Add install and Scripts directories to PATH and .PY to PATHEXT InstallAllUsers = 0 Perform a system-wide installation. python-3.</description></item><item><title>Pdf Combine</title><link>https://yayavicky.github.io/code/pdfcombine/</link><pubDate>Tue, 30 Nov 2021 09:34:29 +0800</pubDate><guid>https://yayavicky.github.io/code/pdfcombine/</guid><description>import PyPDF2,os pdflist=[] path= &amp;#34;D:/temp/hebin/&amp;#34; dirs=os.listdir(path) for filename in dirs: if filename.endswith(&amp;#39;.pdf&amp;#39;): pdflist.append(filename) pdflist.sort(key=str.lower)#按照字母顺序对列表元素排序 pdfwriter=PyPDF2.PdfFileWriter() for filename in pdflist: pdffile=open(path+filename,&amp;#39;rb&amp;#39;) pdfreader=PyPDF2.PdfFileReader(pdffile) for page in range(1,pdfreader.numPages):#去除封面 pagepdf=pdfreader.getPage(page)#获取页面 pdfwriter.addPage(pagepdf)#添加页面 pdfoutput=open(&amp;#39;D:/temp/hebing.pdf&amp;#39;,&amp;#39;wb&amp;#39;) pdfwriter.write(pdfoutput) pdfoutput.close() import PyPDF2 import os def get_file_list(org_path): pdf_list = [] file_list = os.listdir(org_path) for file_name in file_list: if file_name.lower().endswith(&amp;#39;.pdf&amp;#39;): pdf_list.append(file_name) pdf_list.sort(key=str.lower) pdf_list = [os.path.join(org_path, item) for item in pdf_list] return pdf_list def write_pdf(org_pdfs, out_pdf): pdf_writer = PyPDF2.PdfFileWriter() org_handle_list = [] for pdf_file in org_pdfs: pdf_handle = open(pdf_file, &amp;#39;rb&amp;#39;) org_handle_list.</description></item><item><title>Vmware Auto Act</title><link>https://yayavicky.github.io/tools/vmware/</link><pubDate>Thu, 25 Nov 2021 08:58:02 +0800</pubDate><guid>https://yayavicky.github.io/tools/vmware/</guid><description>Vmware 开机 vmrun -T (ws|fusion|player) start &amp;#34;指定虚拟机vmx文件路径&amp;#34; [gui|nogui] vmrun -T ws start &amp;#34;D:\VirtualBox VMs\openwrt\openwrt.vmx&amp;#34; nogui ws 代表workstation, nogui 代表无界面后台运行。
1. 用组策略来实现 组合键(Windows键+R键) 在 “运行” 中输入 gpedit.msc 打开组策略编辑器。
在组策略中，依次选择
用户配置—Windows设置—脚本(登录|注销) 右边，名称下选择 “登录”
2. 命令创建一个快捷方式，将其放入启动文件夹 打开运行或者文件资源管理器，输入 shell:startup ，打开启动文件夹，或者直接打开目录 %appdata%\Microsoft\Windows\Start Menu\Programs\Startup ，将快捷方式放进去。
Vmware 关机 # 挂起 vmrun -T (ws|fusion|player) suspend &amp;#34;指定虚拟机vmx文件路径&amp;#34; # 关机 vmrun -T (ws|fusion|player) stop &amp;#34;指定虚拟机vmx文件路径&amp;#34; soft soft 不可漏，会使虚拟机执行操作系统指定的关机程序
gpedit.msc 本地计算机策略 - 计算机配置 - Windows设置 - 脚本 右侧选择关机 将需要执行的关机或挂起命令写入 bat 文件 ssh 远程关机 /sbin/shutdown.</description></item><item><title>Chocolatey</title><link>https://yayavicky.github.io/tools/chocolatey/</link><pubDate>Thu, 25 Nov 2021 08:47:44 +0800</pubDate><guid>https://yayavicky.github.io/tools/chocolatey/</guid><description>Chocolate 官网 管理员
Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString(&amp;#39;https://chocolatey.org/install.ps1&amp;#39;)) 常用包 choco install -y 7zip.install adobereader notepadplusplus.install tim everything choco install -y 7zip.install adobereader notepadplusplus.install googlechrome firefox vscode everything choco install 7zip.install -y choco install adobereader -y choco install notepadplusplus.install -y choco install googlechrome -y choco install firefox -y choco install everything -y choco install everything.portable -y choco install everythingtoolbar -y choco install vscode -y choco install python3 -y choco install git.</description></item><item><title>Net Card Check</title><link>https://yayavicky.github.io/env/netcardcheck/</link><pubDate>Wed, 17 Nov 2021 15:26:42 +0800</pubDate><guid>https://yayavicky.github.io/env/netcardcheck/</guid><description>Ubuntu查看有线网卡eth0和eth1分别对应网卡型号 查看网卡的型号: lspci | grep -i net 通过driver区分多个网卡的型号: ethtool -i eth0 Centos 查看网卡型号 安装lspci: yum install pciutils 查看网卡型号：lspci | grep Ethernet</description></item><item><title>VS Code</title><link>https://yayavicky.github.io/tools/vscode/</link><pubDate>Tue, 16 Nov 2021 16:07:38 +0800</pubDate><guid>https://yayavicky.github.io/tools/vscode/</guid><description>VS Code Go 扩展默认是使用大量的 Go 工具来提供各种功能的, 每个工具提供某个方面的能力, 比如代码提示是依靠 gocode 的.
不过微软在开发 VS Code 过程中, 定义一种协议, 语言服务器协议, Language Server Protocol.
这可是个好东西, 如果你需要开发编辑器或 IDE, 就不需要再为每种语言实现诸如自动完成, 代码提示等功能了, 直接利用 语言服务器协议 就行了.
gopls 就是官方的语言服务器, 当前处于 alpha 状态.
Remote Extensions Remote - SSH Remote - Containers Remote - WSL 安装 SSH Client： Get-WindowsCapability -Online | ? Name -like &amp;#39;OpenSSH*&amp;#39; Name : OpenSSH.Client~~~~0.0.1.0 State : NotPresent Name : OpenSSH.Server~~~~0.0.1.0 State : NotPresent Add-WindowsCapability -Online -Name OpenSSH.</description></item><item><title>Hugo</title><link>https://yayavicky.github.io/tools/hugo/</link><pubDate>Tue, 16 Nov 2021 11:53:29 +0800</pubDate><guid>https://yayavicky.github.io/tools/hugo/</guid><description>Windows install choco install hugo -y choco install hugo-extended -y hugo help documents quickstart offical quickstart public 软连接
mklink /j d:\code\web\public d:\code\web\Notes\public 本地预览的命令为 hugo server -D 生成生产版 public 的命令为 hugo 加上清理和压缩的参数，可以用 hugo --gc --minify --cleanDestinationDir。 添加新页面 hugo new name.md 自动发布 创建 yayavicky.github.io 仓库, public 将 yayavicky.github.io.source 仓库克隆到本地，开始初始化 Hugo 系统： # 克隆 source 仓库 git clone git@github.com:yayavicky/yayavicky.github.io.git # 进入仓库 cd yayavicky.github.io./ # 在当前目录生成 Hugo 源码 hugo new site .</description></item><item><title>Software Version Rules</title><link>https://yayavicky.github.io/code/softversion/</link><pubDate>Sat, 02 Jan 2021 13:07:40 +0800</pubDate><guid>https://yayavicky.github.io/code/softversion/</guid><description>比较普遍的命名方式： 1、GUN风格： 主版本号.子版本号[.修正版本号[.编译版本号]] Major_Version_Number.Minor_Version_Number[.Revision_Number[.Build_Number]] 示例：1.2.1 、 2.0 、 5.0.0 build-13124
2、Windows风格： 主版本号.子版本号[.修正版本号[.编译版本号]] Major_Version_Number.Minor_Version_Number[.Revision_Number[.Build_Number]] 示例：1.2.1 、 2.0
3、.Net Framework风格： 主版本号.子版本号[.编译版本号[.修正版本号]] Major_Version_Number.Minor_Version_Number[.Build_Number[.Revision_Number]] 版本号由二到四部分组成：主版本号、次版本号、内部版本号、修订号。主版本号和次版本号是必选的，内部版本号和修订号是可选的。但是如果定义了修订号部分，则内部版本号就是必选的。所有定义的部分都必须是大于或者等于0的整数。
应根据约定使用下面这些部分：
Major：具有相同名称但不同主版本号的程序集不可互换。它适用于对产品的大量重写，或战略性转变，且无法实现向后兼容性。 Minor：如果两个程序集的名称和主版本号相同，而次版本号不同，但照顾了向后兼容性。它适用于产品的修正版或完全向后兼容的新版本。 Build：内部版本号的不同，表示对相同源所做的重新编译。它适合于更改处理器、平台或编译器的情况。 Revision：名称、主版本号、次版本号都相同，但修订号不同的程序集应该是完全可以互换的。它适用于修复以前发布的程序集中的安全漏洞。 只有内部版本号或修订号不同的程序集后续版本，才可以被认为是先前版本的修补程序（Hotfix）更新。
版本号管理策略： 1、GUN风格： 产品初版时，版本号可以为0.1或0.1.0，也可以为1.0或1.0.0； 当产品进行了局部修改或bug修正时，主版本号和子版本号都不变，修正版本号+1； 当产品在原有的基础上增加了部分功能时，主版本号不变，子版本号+1，修正版本号复位为0； 当产品进行了重大修改或局部修正累计较多，而导致产品整体发生全局变化的，主版本号+1； 编译版本号，一般是编译器在编译过程中自动生成的，我们只定义其格式，并不进行人为控制； 2、Windows风格： 产品初版时，版本号为1.0或1.0.0； 当产品进行了局部修改或bug修正时，主版本号和子版本号都不变，修正版本号+1； 当产品在原有的基础上增加了部分功能时，主版本号不变，子版本号+1，修正版本号复位为0； 当产品进行了重大修改或局部修正累计较多，而导致产品整体发生全局变化的，主版本号+1； 编译版本号，一般是编译器在编译过程中自动生成的，我们只定义其格式，并不进行人为控制； 一些付费软件在升级的时候也需要购买，那么这个所谓的升级，一般是指主版本号的变更。
另外，还可以在版本号后面加上Alpha、Beta、Gamma、Current、RC（Release Candidate）、Release、Stable等后缀，在这些后缀后面还可以加上1位数字的版本号。
Android版本号： 1、主版本号变化 Android2.x：仅支持手机等小平移动设备； Android3.x：只支持平板和电视等大屏设备； Android4.x：合并了2.x和3.x，支持多种设备； 2、次版本号变化 功能增加；
3、维护版本号变化 修复漏洞、bug；
4、构建版本号变化 变化周期频繁且不固定，针对开发人员内部使用；
内部测试版本号使用建议：
主版本号.次（子）版本号.修正版本号.日期版本号_阶段版本号_（修改次数）_开发者缩写
例如：1.0.1.150325_beta_b3_ZainF
附录： α（alpha）内部测试版 α版表示该产品只是一个初步完成的产品，通常只用于在开发者内部交流，也有很少一部分发布给专业的测试人员，一般情况下，该版本会存在较多bug，不适合普通用户使用。
β（Beta）外部测试版 该版本相对于α版已经有了很大改进，消除了严重的错误，但可能依然存在一些缺陷，需要经过大规模的发布测试进一步发现、消除错误。这一版本通常由软件公司免费发布，通过一些专业的爱好者测试，将结果反馈给开发人员，开发者们再进行有针对性的修改，该版本一般不适合普通用户大规模安装使用。</description></item><item><title>mklink 命令找不到</title><link>https://yayavicky.github.io/env/mklink/</link><pubDate>Mon, 21 Dec 2020 08:35:00 +0800</pubDate><guid>https://yayavicky.github.io/env/mklink/</guid><description> 输入 secpol.msc 本地策略 用户权限分配 创建符号链接 添加用户或组</description></item><item><title>Esxi Auto Close When Power Off</title><link>https://yayavicky.github.io/env/esxiclose/</link><pubDate>Wed, 16 Dec 2020 17:19:19 +0800</pubDate><guid>https://yayavicky.github.io/env/esxiclose/</guid><description>from
开启ESXI的ssh功能，并ssh登录ESXI创建ups脚本 1 进入到ESXI web控制台，开启ssh功能 2 ssh连接到ESXI，创建必要文件及脚本 脚本逻辑： 每1分钟ping一次指定IP，每次只ping一次，如果达到2次，三分钟后再ping一次，此时如果还是不通，就记录时间写入日志到ups.log，并执行关机命令，具体时间和逻辑你可以随意更改：
[root@localhost:~] cd /vmfs/volumes/data #cd到对应硬盘卷，以你的硬盘命名为准 [root@localhost:/vmfs/volumes/5f174c56-6a79f5cc-c990-a03e6ba0a187]mkdir ups [root@localhost:/vmfs/volumes/5f174c56-6a79f5cc-c990-a03e6ba0a187]cd ups [root@localhost:/vmfs/volumes/5f174c56-6a79f5cc-c990-a03e6ba0a187/ups]touch ups.log #写日志用 [root@localhost:/vmfs/volumes/5f174c56-6a79f5cc-c990-a03e6ba0a187/ups]vim ups.sh #创建以下脚本 #!/bin/sh UPS_LOG=/vmfs/volumes/data/ups/ups.log count=0 IP=192.168.1.200 # 写你的网关IP，只要是断电ping不通的IP都行 while :;do ping -c 1 $IP &amp;gt; /dev/null if [ $? -eq 0 ]; then : else count=$(expr $count + 1); fi sleep 60 if [ $count -ge 2 ]; then echo &amp;#34;$(date)AC Power maybe off, checking again after 3 minutes !</description></item><item><title>Windows Activate</title><link>https://yayavicky.github.io/env/kms/</link><pubDate>Mon, 15 Jan 2018 15:59:24 +0800</pubDate><guid>https://yayavicky.github.io/env/kms/</guid><description>系统信息 以下均需管理员权限
查看系统版本
wmic os get caption 设置系统key
slmgr /ipk xxxxx-xxxxx-xxxxx-xxxxx-xxxxx 设置服务器
slmgr /skms Your IP or Domain:1688 激活
slmgr /ato Office 关于 Office 的激活，要求必须是 VOL 版本，否则无法激活。 找到你的 Office 安装目录，32 位默认一般为 C:\Program Files (x86)\Microsoft Office\Office16 64 位默认一般为 C:\Program Files\Microsoft Office\Office1。 Office16 是 Office 2016，Office15 就是 Office 2013，Office14 就是 Office 2010。 打开以上所说的目录，应该有个 OSPP.VBS 文件。 使用管理员权限运行 cmd 进入 Office 目录，命令如下：
cd &amp;#34;C:\Program Files (x86)\Microsoft Office\Office16&amp;#34; cscript ospp.vbs /sethst:Your IP or Domain cscript ospp.</description></item></channel></rss>