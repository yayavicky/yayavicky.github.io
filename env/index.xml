<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Envs on Vicky's Notes</title><link>https://yayavicky.github.io/env/</link><description>Recent content in Envs on Vicky's Notes</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Except where otherwise noted, content on this site is licensed under a [Creative Commons Attribution 4.0 International license](https://creativecommons.org/licenses/by-sa/4.0/).</copyright><lastBuildDate>Wed, 08 Dec 2021 13:29:35 +0800</lastBuildDate><atom:link href="https://yayavicky.github.io/env/index.xml" rel="self" type="application/rss+xml"/><item><title>Win10fix</title><link>https://yayavicky.github.io/env/win10fix/</link><pubDate>Wed, 08 Dec 2021 13:29:35 +0800</pubDate><guid>https://yayavicky.github.io/env/win10fix/</guid><description>使用SFC修复Windows 10 sfc /scannow 使用DISM修复Windows 10 DISM /Online /Cleanup-Image /CheckHealth DISM/Online/Cleanup-Image/RestoreHealth/Source:repairSource\install.wim 使用命令提示符恢复出厂设置 systemreset-cleanpc 使用命令提示符进行系统还原 启用带命令提示符的安全模式
管理员帐户登录系统。打开cmd之后，请输入“rstrui.exe”，然后按“回车”继续。</description></item><item><title>Utf8bom</title><link>https://yayavicky.github.io/env/utf8bom/</link><pubDate>Fri, 03 Dec 2021 08:46:17 +0800</pubDate><guid>https://yayavicky.github.io/env/utf8bom/</guid><description>UTF-8 + BOM编码方式一般会在windows操作系统中出现，比如WINDOWS自带的记事本等软件，在保存一个以UTF-8编码的文件时，会在文件开始的地方插入三个不可见的字符（0xEF 0xBB 0xBF，即BOM）。它是一串隐藏的字符，用于让记事本等编辑器识别这个文件是否以UTF-8编码。
import os def strip_remove_65279(file_path): with open(file_path, &amp;#39;r&amp;#39;, encoding=&amp;#39;utf-8&amp;#39;) as f: lines = f.readlines() dir_name, file_full_name = os.path.split(file_path) file_name, extension = os.path.splitext(file_full_name) new_file = os.path.join(dir_name, file_name + &amp;#34;_strip&amp;#34; + extension) with open(new_file, &amp;#39;a&amp;#39;, encoding=&amp;#39;utf-8&amp;#39;) as ff: for line in lines: line = line.replace(chr(65279), &amp;#39;&amp;#39;) ff.write(line) def replace_remove_65279(file_path): with open(file_path, &amp;#39;r&amp;#39;, encoding=&amp;#39;utf-8&amp;#39;) as f: lines = f.readlines() with open(file_path, &amp;#39;w&amp;#39;, encoding=&amp;#39;utf-8&amp;#39;) as ff: for line in lines: line = line.</description></item><item><title>群晖设置</title><link>https://yayavicky.github.io/env/nas/</link><pubDate>Tue, 30 Nov 2021 11:12:48 +0800</pubDate><guid>https://yayavicky.github.io/env/nas/</guid><description>直接使用套件中心 套件中心添加https://www.cphub.net 社区套件源，然后直接安装。
使用离线 ipk 文件。 打开 community package hub，选择你的固件型号：
下载 Easy Bootstrap Installer 与 iPKGui 两个套件安装包。
安装 Easy Bootstrap Installer 主要为 ipkg 或 opkg 环境，iPKGui 则为 ipkg 的图形界面。因此，我们需要先安装 Easy Bootstrap Installer 后安装 iPKGui 。　打开群晖 套件中心，选择 手动安装，选择刚才下载好的 Easy Bootstrap Installer spk 文件，依照提示安装后重启群晖即可。（需要注意的是，在装 Easy Bootstrap Installer 的过程中，由于会对源做刷新动作，而 ipkg 的源又被墙了，所以在网络状况不好的情况下，会非常慢。 ）　之后使用 ssh 连接并群晖获取 root 权限 ，执行 ipkg 能够正确执行后，依照前面方式在套件中心安装 iPKGui 的 spk 文件即可。至此，整个流程结束，完成 ipkg 的环境配置。
安装其他包 sudo /opt/bin/opkg update sudo /opt/bin/opkg install lsof sudo /opt/bin/lsof | grep deleted sudo kill -9 PID df -i df -h ls /dev/md* /dev/md0 /dev/md1 /dev/md2 sudo mdadm --detail /dev/md0 /dev/md1</description></item><item><title>Python 环境离线安装</title><link>https://yayavicky.github.io/env/offlinepython/</link><pubDate>Tue, 30 Nov 2021 09:39:56 +0800</pubDate><guid>https://yayavicky.github.io/env/offlinepython/</guid><description>get help python.exe /? /passive : display progress without requiring user interaction /quiet : install/uninstall without displaying any UI /simple : prevent user customization /uninstall : remove python(without confirmation) /layout [directory] : pre-download all components /log [filename] : to specify log files location find other options
PrependPath =0 Add install and Scripts directories to PATH and .PY to PATHEXT InstallAllUsers = 0 Perform a system-wide installation. python-3.</description></item><item><title>Net Card Check</title><link>https://yayavicky.github.io/env/netcardcheck/</link><pubDate>Wed, 17 Nov 2021 15:26:42 +0800</pubDate><guid>https://yayavicky.github.io/env/netcardcheck/</guid><description>Ubuntu查看有线网卡eth0和eth1分别对应网卡型号 查看网卡的型号: lspci | grep -i net 通过driver区分多个网卡的型号: ethtool -i eth0 Centos 查看网卡型号 安装lspci: yum install pciutils 查看网卡型号：lspci | grep Ethernet</description></item><item><title>mklink 命令找不到</title><link>https://yayavicky.github.io/env/mklink/</link><pubDate>Mon, 21 Dec 2020 08:35:00 +0800</pubDate><guid>https://yayavicky.github.io/env/mklink/</guid><description> 输入 secpol.msc 本地策略 用户权限分配 创建符号链接 添加用户或组</description></item><item><title>Esxi Auto Close When Power Off</title><link>https://yayavicky.github.io/env/esxiclose/</link><pubDate>Wed, 16 Dec 2020 17:19:19 +0800</pubDate><guid>https://yayavicky.github.io/env/esxiclose/</guid><description>from
开启ESXI的ssh功能，并ssh登录ESXI创建ups脚本 1 进入到ESXI web控制台，开启ssh功能 2 ssh连接到ESXI，创建必要文件及脚本 脚本逻辑： 每1分钟ping一次指定IP，每次只ping一次，如果达到2次，三分钟后再ping一次，此时如果还是不通，就记录时间写入日志到ups.log，并执行关机命令，具体时间和逻辑你可以随意更改：
[root@localhost:~] cd /vmfs/volumes/data #cd到对应硬盘卷，以你的硬盘命名为准 [root@localhost:/vmfs/volumes/5f174c56-6a79f5cc-c990-a03e6ba0a187]mkdir ups [root@localhost:/vmfs/volumes/5f174c56-6a79f5cc-c990-a03e6ba0a187]cd ups [root@localhost:/vmfs/volumes/5f174c56-6a79f5cc-c990-a03e6ba0a187/ups]touch ups.log #写日志用 [root@localhost:/vmfs/volumes/5f174c56-6a79f5cc-c990-a03e6ba0a187/ups]vim ups.sh #创建以下脚本 #!/bin/sh UPS_LOG=/vmfs/volumes/data/ups/ups.log count=0 IP=192.168.1.200 # 写你的网关IP，只要是断电ping不通的IP都行 while :;do ping -c 1 $IP &amp;gt; /dev/null if [ $? -eq 0 ]; then : else count=$(expr $count + 1); fi sleep 60 if [ $count -ge 2 ]; then echo &amp;#34;$(date)AC Power maybe off, checking again after 3 minutes !</description></item><item><title>Python 虚拟环境</title><link>https://yayavicky.github.io/env/pyenv/</link><pubDate>Sun, 02 Feb 2020 15:41:52 +0800</pubDate><guid>https://yayavicky.github.io/env/pyenv/</guid><description>环境 Windows 10 windows 则新增环境变量：WORKON_HOME 安装virtualenvwrapper pip install virtualenvwrapper-win 创建虚拟环境 语法 mkvirtualenv [-a project_path] [-i package] [-r requirements_file] [virtualenv options] ENVNAME # 创建虚拟环境 virname mkvirtualenv -r requirements.txt --python=python3.7.8 virname mkvirtualenv testweb -p C:\Python\Python37\python.exe 进入虚拟环境 workon hotbar 退出虚拟环境 deactivate 列出虚拟环境 workon lsvirtualenv 切换虚拟环境 workon another_env_name 删除虚拟环境 rmvirtualenv hotbar pipenv # 初始化虚拟环境（可自己指定python版本） pipenv --python 3.</description></item><item><title>Windows Activate</title><link>https://yayavicky.github.io/env/kms/</link><pubDate>Mon, 15 Jan 2018 15:59:24 +0800</pubDate><guid>https://yayavicky.github.io/env/kms/</guid><description>系统信息 以下均需管理员权限
查看系统版本
wmic os get caption 设置系统key
slmgr /ipk xxxxx-xxxxx-xxxxx-xxxxx-xxxxx 设置服务器
slmgr /skms Your IP or Domain:1688 激活
slmgr /ato Office 关于 Office 的激活，要求必须是 VOL 版本，否则无法激活。 找到你的 Office 安装目录，32 位默认一般为 C:\Program Files (x86)\Microsoft Office\Office16 64 位默认一般为 C:\Program Files\Microsoft Office\Office1。 Office16 是 Office 2016，Office15 就是 Office 2013，Office14 就是 Office 2010。 打开以上所说的目录，应该有个 OSPP.VBS 文件。 使用管理员权限运行 cmd 进入 Office 目录，命令如下：
cd &amp;#34;C:\Program Files (x86)\Microsoft Office\Office16&amp;#34; cscript ospp.vbs /sethst:Your IP or Domain cscript ospp.</description></item><item><title/><link>https://yayavicky.github.io/env/dell740raid/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yayavicky.github.io/env/dell740raid/</guid><description>Dell R740服务器新版Raid设置图文教程 1. 进入BIOS 开机后，在此界面时按F2键进入BIOS
2. 启动方式 进入“System BIOS”→“Boot Settings” →“Boot Mode”，选择“UEFI”
3. Device Setting 返回主界面，进入 “Device Settings”
选择“RAID Controller in Slot 6:Dell Utility”
3.1 Main Menu 通过Tab键进行切换，选择“Main Menu”
选择“Configuration Management”，配置Raid
当前并没有Raid，选择“Create Virtual Disk”创建一个虚拟磁盘
在该服务器上只有两块本地磁盘，只能创建Raid0或Raid1，这里我们创建Raid1，然后点击“Select Physical Disks”选择需要加入此Raid的磁盘
将本地的两块磁盘全部选择上，然后点击“Apply Changes”进行提交，并点击“OK”
在虚拟磁盘的配置选项中，只需要将“Default Initialization”设置为Fast，表示创建该虚拟磁盘后，进行快速初始化；然后点击“Create Virtual Disk”创建虚拟磁盘
确实是否提交该操作，利用光标键在“Confirm”前面的方框中打上勾并点击“Yes”进行确认，并点击“OK”
接下来使用“Esc”键返回到主界面，并再次按“Esc”退出键，提示是否退出，选择“Yes”退出
4）Raid配置好后，接下来将操作系统的ISO文件映射到服务器，开始安装操作系统</description></item><item><title/><link>https://yayavicky.github.io/env/docker01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yayavicky.github.io/env/docker01/</guid><description>安装docker 1. 虚拟机 ubuntu 20.04 curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun 2. 设置国内镜像 vim /etc/docker/daemon.json { &amp;#34;registry-mirrors&amp;#34;:[ &amp;#34;https://registry.docker-cn.com&amp;#34;, &amp;#34;https://kfwkfulq.mirror.aliyuncs.com&amp;#34;, &amp;#34;https://pee6w651.mirror.aliyuncs.com&amp;#34;, &amp;#34;https://21qq34jg.mirror.aliyuncs.com&amp;#34; ] } 3. 免sudo 需root权限， 如使用sudo命令，环境变量会变化，需要避免环境变量变化
sudo groupadd docker # 创建用户组 sudo usermod -aG docker $USER #当前用户加入用户组 newgrp docker # 刷新用户组权限 4. hello word docker run hello-world docker 常用命令 C/S 结构
docker client 发送指令 docker server 接收指令，管理镜像、容器、系统资源 docker --help
docker 1.13 开始，命令分组
1. 镜像操作 images子命令</description></item><item><title/><link>https://yayavicky.github.io/env/docker02_gitlab/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yayavicky.github.io/env/docker02_gitlab/</guid><description>汉化版 汉化地址 docker run -d -p 3000:80 twang2218/gitlab-ce-zh:11.1.4
gitlab 虚拟机配置
RAM至少 2G /usr/local/docker/gitlab/docker-compose.yaml
https://docs.gitlab.com/omnibus/settings/smtp.html
version: &amp;#39;3&amp;#39; services: gitlab: image: &amp;#39;twang2218/gitlab-ce-zh:11.1.4&amp;#39; container_name: gitlabzh restart: always hostname: &amp;#39;192.168.2.160&amp;#39; environment: TZ: &amp;#39;Asia/Shanghai&amp;#39; GITLAB_OMNIBUS_CONFIG: | external_url &amp;#39;http://192.168.2.160:80&amp;#39; gitlab_rails[&amp;#39;time_zone&amp;#39;] = &amp;#39;Asia/Shanghai&amp;#39; gitlab_rails[&amp;#39;smtp_enable&amp;#39;] = true gitlab_rails[&amp;#39;smtp_address&amp;#39;] = &amp;#39;smtphz.qiye.163.com&amp;#39; gitlab_rails[&amp;#39;smtp_port&amp;#39;] = 994 gitlab_rails[&amp;#39;smtp_user_name&amp;#39;] = &amp;#39;info@cetsc.com&amp;#39; gitlab_rails[&amp;#39;smtp_password&amp;#39;] = &amp;#39;授权码&amp;#39; gitlab_rails[&amp;#39;smtp_domain&amp;#39;] = &amp;#39;163.com&amp;#39; gitlab_rails[&amp;#39;smtp_authentication&amp;#39;] = &amp;#39;login&amp;#39; gitlab_rails[&amp;#39;smtp_enable_starttls_auto&amp;#39;] = true gitlab_rails[&amp;#39;smtp_tls&amp;#39;] = true gitlab_rails[&amp;#39;gitlab_email_from&amp;#39;] = &amp;#39;info@cetsc.</description></item><item><title/><link>https://yayavicky.github.io/env/esxiinstall/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yayavicky.github.io/env/esxiinstall/</guid><description>ESxi安装
资料 Vmware ESXi 配置 IP 地址 1. 进入设置 按F2 进入配置界面
配置 IP，DNS
Troubleshooting Options 选项中打开 ssh， shell
2. 检查系统配置 [xxx@ServerHost:~] df -h Filesystem Size Used Available Use% Mounted on VMFS-6 14.5T 2.1G 14.5T 0% /vmfs/volumes/datastore1 vfat 249.7M 148.4M 101.3M 59% /vmfs/volumes/e81b9b74-8045e3bd-4b51-d7552bfeb866 vfat 4.0G 4.9M 4.0G 0% /vmfs/volumes/6234553d-3be733cc-0421-34735aa48f92 vfat 249.7M 4.0K 249.7M 0% /vmfs/volumes/b83de17b-5e9b7fed-0b99-964b1e02b466 vfat 285.8M 173.8M 112.0M 61% /vmfs/volumes/62345536-210a1700-08d4-34735aa48f92 [xxx@ServerHost:~] fdisk -l *** *** The fdisk command is deprecated: fdisk does not handle GPT partitions.</description></item><item><title/><link>https://yayavicky.github.io/env/virtualpc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yayavicky.github.io/env/virtualpc/</guid><description>1. 虚拟机文件 文件名示例 文件类型 VM_name.vmx 配置文件 VM_name.vswp vmx-VM_name.vswp 交换文件 VM_name.nvram BIOS文件 vmware.log 日志文件 VM_name.vmtx 模板文件 VM_name-rdm.vmdk 裸设备映射文件 VM_name.vmdk 磁盘描述符文件 VM_name-flat.vmdk 磁盘数据文件 VM_name.vmss 挂起状态文件 VM_name.vmsd 快照数据文件 VM_name-Snapshot.vmsn 快照状态文件 VM_name-#####.delta.vmdk 快照磁盘文件 VM_name-Snapshot#.vmem 快照活动内存文件 虚拟机默认磁盘模式： 允许创建快照
可选磁盘模式： 独立模式-》永久性磁盘或非永久性
磁盘调配策略： 厚配置延迟清零、厚配置立即清零或精简配置</description></item><item><title/><link>https://yayavicky.github.io/env/winfileauth/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yayavicky.github.io/env/winfileauth/</guid><description>CMD 文件夹权限处理 磁盘分区必须是 NTFS. FAT32不可用。
cacls.exe 修改文件的访问控制表
cacls filename [/T] [/E] [/C] [/G username] [/R user[...]] [/P usererm[...]] [/D user [...]] cacls filename 显示访问控制列表 ACL T 更改当前目录及所有子目录中指定的文件的 ACL E 编辑 ACL 而非替换 C 出现拒绝访问错误时继续 /G username:perm 赋予指定用户访问权限， perm 表示访问权限，具体为 R 读取 W 写入 C 更改、写入 F 完全控制 /R user 撤销指定用户访问权限，必须与 /E 配合使用 /P user:perm 替换指定用户访问权限， perm 同上，但多 N 选项，即 无 /D user 拒绝指定用户访问 icacls.exe 1. 查看权限 icacls folder_path icacls D:\log D:\log BUILTIN\Administrators:(I)(F) BUILTIN\Administrators:(I)(OI)(CI)(IO)(F) NT AUTHORITY\SYSTEM:(I)(F) NT AUTHORITY\SYSTEM:(I)(OI)(CI)(IO)(F) NT AUTHORITY\Authenticated Users:(I)(M) NT AUTHORITY\Authenticated Users:(I)(OI)(CI)(IO)(M) BUILTIN\Users:(I)(RX) BUILTIN\Users:(I)(OI)(CI)(IO)(GR,GE) 已成功处理 1 个文件; 处理 0 个文件时失败 注意事项: 对于继承的声明要放到具体权限之前。例如: (OI)(CI)(IO)(M) 是对的，但 (M)(OI)(CI)(IO) 会提示无效的参数。</description></item><item><title/><link>https://yayavicky.github.io/env/winnetuser/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yayavicky.github.io/env/winnetuser/</guid><description>图形界面
&amp;ldquo;compmgmt.msc&amp;rdquo;
1. 添加用户 net user username password /add net user xt2 xt2 /add net user xt3 xt3 /add net user xt4 xt4 /add net user xt5 xt5 /add net user xt6 xt6 /add 2. 命令设置用户不能更改密码 net user xt1 xt1 /passwordchg:no net user xt2 xt2 /passwordchg:no net user xt3 xt3 /passwordchg:no net user xt4 xt4 /passwordchg:no net user xt5 xt5 /passwordchg:no 3. 把用户添加用户组 administrators
net localgroup &amp;#34;administrators&amp;#34; xt1 /add net localgroup &amp;#34;administrators&amp;#34; xt2 /add net localgroup &amp;#34;administrators&amp;#34; xt3 /add net localgroup &amp;#34;administrators&amp;#34; xt4 /add net localgroup &amp;#34;administrators&amp;#34; xt5 /add net localgroup &amp;#34;administrators&amp;#34; xt6 /add net localgroup &amp;#34;administrators&amp;#34; xt7 /add 4.</description></item></channel></rss>