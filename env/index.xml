<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Envs on Vicky's Notes</title><link>https://yayavicky.github.io/env/</link><description>Recent content in Envs on Vicky's Notes</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Except where otherwise noted, content on this site is licensed under a [Creative Commons Attribution 4.0 International license](https://creativecommons.org/licenses/by-sa/4.0/).</copyright><lastBuildDate>Wed, 08 Dec 2021 13:29:35 +0800</lastBuildDate><atom:link href="https://yayavicky.github.io/env/index.xml" rel="self" type="application/rss+xml"/><item><title>Win10fix</title><link>https://yayavicky.github.io/env/win10fix/</link><pubDate>Wed, 08 Dec 2021 13:29:35 +0800</pubDate><guid>https://yayavicky.github.io/env/win10fix/</guid><description>使用SFC修复Windows 10 sfc /scannow 使用DISM修复Windows 10 DISM /Online /Cleanup-Image /CheckHealth DISM/Online/Cleanup-Image/RestoreHealth/Source:repairSource\install.wim 使用命令提示符恢复出厂设置 systemreset-cleanpc 使用命令提示符进行系统还原 启用带命令提示符的安全模式
管理员帐户登录系统。打开cmd之后，请输入“rstrui.exe”，然后按“回车”继续。</description></item><item><title>Utf8bom</title><link>https://yayavicky.github.io/env/utf8bom/</link><pubDate>Fri, 03 Dec 2021 08:46:17 +0800</pubDate><guid>https://yayavicky.github.io/env/utf8bom/</guid><description>UTF-8 + BOM编码方式一般会在windows操作系统中出现，比如WINDOWS自带的记事本等软件，在保存一个以UTF-8编码的文件时，会在文件开始的地方插入三个不可见的字符（0xEF 0xBB 0xBF，即BOM）。它是一串隐藏的字符，用于让记事本等编辑器识别这个文件是否以UTF-8编码。
import os def strip_remove_65279(file_path): with open(file_path, &amp;#39;r&amp;#39;, encoding=&amp;#39;utf-8&amp;#39;) as f: lines = f.readlines() dir_name, file_full_name = os.path.split(file_path) file_name, extension = os.path.splitext(file_full_name) new_file = os.path.join(dir_name, file_name + &amp;#34;_strip&amp;#34; + extension) with open(new_file, &amp;#39;a&amp;#39;, encoding=&amp;#39;utf-8&amp;#39;) as ff: for line in lines: line = line.replace(chr(65279), &amp;#39;&amp;#39;) ff.write(line) def replace_remove_65279(file_path): with open(file_path, &amp;#39;r&amp;#39;, encoding=&amp;#39;utf-8&amp;#39;) as f: lines = f.readlines() with open(file_path, &amp;#39;w&amp;#39;, encoding=&amp;#39;utf-8&amp;#39;) as ff: for line in lines: line = line.</description></item><item><title>群晖设置</title><link>https://yayavicky.github.io/env/nas/</link><pubDate>Tue, 30 Nov 2021 11:12:48 +0800</pubDate><guid>https://yayavicky.github.io/env/nas/</guid><description>直接使用套件中心 套件中心添加https://www.cphub.net 社区套件源，然后直接安装。
使用离线 ipk 文件。 打开 community package hub，选择你的固件型号：
下载 Easy Bootstrap Installer 与 iPKGui 两个套件安装包。
安装 Easy Bootstrap Installer 主要为 ipkg 或 opkg 环境，iPKGui 则为 ipkg 的图形界面。因此，我们需要先安装 Easy Bootstrap Installer 后安装 iPKGui 。　打开群晖 套件中心，选择 手动安装，选择刚才下载好的 Easy Bootstrap Installer spk 文件，依照提示安装后重启群晖即可。（需要注意的是，在装 Easy Bootstrap Installer 的过程中，由于会对源做刷新动作，而 ipkg 的源又被墙了，所以在网络状况不好的情况下，会非常慢。 ）　之后使用 ssh 连接并群晖获取 root 权限 ，执行 ipkg 能够正确执行后，依照前面方式在套件中心安装 iPKGui 的 spk 文件即可。至此，整个流程结束，完成 ipkg 的环境配置。
安装其他包 sudo /opt/bin/opkg update sudo /opt/bin/opkg install lsof sudo /opt/bin/lsof | grep deleted sudo kill -9 PID df -i df -h ls /dev/md* /dev/md0 /dev/md1 /dev/md2 sudo mdadm --detail /dev/md0 /dev/md1</description></item><item><title>Python 环境离线安装</title><link>https://yayavicky.github.io/env/offlinepython/</link><pubDate>Tue, 30 Nov 2021 09:39:56 +0800</pubDate><guid>https://yayavicky.github.io/env/offlinepython/</guid><description>get help python.exe /? /passive : display progress without requiring user interaction /quiet : install/uninstall without displaying any UI /simple : prevent user customization /uninstall : remove python(without confirmation) /layout [directory] : pre-download all components /log [filename] : to specify log files location find other options
PrependPath =0 Add install and Scripts directories to PATH and .PY to PATHEXT InstallAllUsers = 0 Perform a system-wide installation. python-3.</description></item><item><title>Net Card Check</title><link>https://yayavicky.github.io/env/netcardcheck/</link><pubDate>Wed, 17 Nov 2021 15:26:42 +0800</pubDate><guid>https://yayavicky.github.io/env/netcardcheck/</guid><description>Ubuntu查看有线网卡eth0和eth1分别对应网卡型号 查看网卡的型号: lspci | grep -i net 通过driver区分多个网卡的型号: ethtool -i eth0 Centos 查看网卡型号 安装lspci: yum install pciutils 查看网卡型号：lspci | grep Ethernet</description></item><item><title>Esxi Auto Close When Power Off</title><link>https://yayavicky.github.io/env/esxiclose/</link><pubDate>Wed, 16 Dec 2020 17:19:19 +0800</pubDate><guid>https://yayavicky.github.io/env/esxiclose/</guid><description>from
开启ESXI的ssh功能，并ssh登录ESXI创建ups脚本 1 进入到ESXI web控制台，开启ssh功能 2 ssh连接到ESXI，创建必要文件及脚本 脚本逻辑： 每1分钟ping一次指定IP，每次只ping一次，如果达到2次，三分钟后再ping一次，此时如果还是不通，就记录时间写入日志到ups.log，并执行关机命令，具体时间和逻辑你可以随意更改：
[root@localhost:~] cd /vmfs/volumes/data #cd到对应硬盘卷，以你的硬盘命名为准 [root@localhost:/vmfs/volumes/5f174c56-6a79f5cc-c990-a03e6ba0a187]mkdir ups [root@localhost:/vmfs/volumes/5f174c56-6a79f5cc-c990-a03e6ba0a187]cd ups [root@localhost:/vmfs/volumes/5f174c56-6a79f5cc-c990-a03e6ba0a187/ups]touch ups.log #写日志用 [root@localhost:/vmfs/volumes/5f174c56-6a79f5cc-c990-a03e6ba0a187/ups]vim ups.sh #创建以下脚本 #!/bin/sh UPS_LOG=/vmfs/volumes/data/ups/ups.log count=0 IP=192.168.1.200 # 写你的网关IP，只要是断电ping不通的IP都行 while :;do ping -c 1 $IP &amp;gt; /dev/null if [ $? -eq 0 ]; then : else count=$(expr $count + 1); fi sleep 60 if [ $count -ge 2 ]; then echo &amp;#34;$(date)AC Power maybe off, checking again after 3 minutes !</description></item></channel></rss>