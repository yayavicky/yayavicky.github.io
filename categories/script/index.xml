<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Script on Vicky's Notes</title><link>https://yayavicky.github.io/categories/script/</link><description>Recent content in Script on Vicky's Notes</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Except where otherwise noted, content on this site is licensed under a [Creative Commons Attribution 4.0 International license](https://creativecommons.org/licenses/by-sa/4.0/).</copyright><lastBuildDate>Thu, 09 Dec 2021 15:10:08 +0800</lastBuildDate><atom:link href="https://yayavicky.github.io/categories/script/index.xml" rel="self" type="application/rss+xml"/><item><title>Python</title><link>https://yayavicky.github.io/code/python/</link><pubDate>Thu, 09 Dec 2021 15:10:08 +0800</pubDate><guid>https://yayavicky.github.io/code/python/</guid><description>字典扩展类 原来需要这样用：dic['website'] = 'taobao.com' 有了这个类，可以这样用：dic.websites = 'taobao.com'
class EasyAccessDict(dict): def __getattr__(self,name): if name in self: return self[name] n=easyaccessdict() super().__setitem__(name, n) return n def __getitem__(self,name): if name not in self: super().__setitem__(name,nicedict()) return super().__getitem__(name) def __setattr__(self,name,value): super().__setitem__(name,value)</description></item><item><title>Backup Files</title><link>https://yayavicky.github.io/code/backupfile/</link><pubDate>Wed, 08 Dec 2021 11:08:32 +0800</pubDate><guid>https://yayavicky.github.io/code/backupfile/</guid><description>$log_file_path=&amp;#34;D:\log\info_&amp;#34;+ (Get-Date -Format &amp;#34;yyyy-MM-dd&amp;#34;) + &amp;#34;.log&amp;#34; $error_log_file = &amp;#34;D:\log\error_&amp;#34;+ (Get-Date -Format &amp;#34;yyyy-MM-dd&amp;#34;) + &amp;#34;.log&amp;#34; $tar_dir_list=@(&amp;#34;D:\DailyBackup\KIS_JD&amp;#34;, &amp;#34;D:\DailyBackup\KIS_YP&amp;#34;) foreach($tar_dir in $tar_dir_list){ $file_list = get_file_list($tar_dir) cacl_sha256($file_list) } function write_log_file($message) { (Get-Date).ToString() +&amp;#34; - &amp;#34;+ $message &amp;gt;&amp;gt; $log_file_path } function write_error_log($message) { (Get-Date).ToString() +&amp;#34; - &amp;#34;+ $message &amp;gt;&amp;gt; $error_log_file } function get_file_list($dir_path, $exclude_extension = &amp;#39;.sha256&amp;#39;) { write_log_file(&amp;#34;begin check files under ${dir_path}&amp;#34;) $result = @() $file_list=(get-childitem $dir_path) Foreach($file_item in $file_list){ if ($file_item.Extension -ne $exclude_extension) { $result +=@($file_item) } } return $result } function cacl_sha256($file_list) { Foreach($file_item in $file_list) { $full_name = $file_item.</description></item><item><title>Python 环境离线安装</title><link>https://yayavicky.github.io/env/offlinepython/</link><pubDate>Tue, 30 Nov 2021 09:39:56 +0800</pubDate><guid>https://yayavicky.github.io/env/offlinepython/</guid><description>get help python.exe /? /passive : display progress without requiring user interaction /quiet : install/uninstall without displaying any UI /simple : prevent user customization /uninstall : remove python(without confirmation) /layout [directory] : pre-download all components /log [filename] : to specify log files location find other options
PrependPath =0 Add install and Scripts directories to PATH and .PY to PATHEXT InstallAllUsers = 0 Perform a system-wide installation. python-3.</description></item><item><title>Pdf Combine</title><link>https://yayavicky.github.io/code/pdfcombine/</link><pubDate>Tue, 30 Nov 2021 09:34:29 +0800</pubDate><guid>https://yayavicky.github.io/code/pdfcombine/</guid><description>import PyPDF2,os pdflist=[] path= &amp;#34;D:/temp/hebin/&amp;#34; dirs=os.listdir(path) for filename in dirs: if filename.endswith(&amp;#39;.pdf&amp;#39;): pdflist.append(filename) pdflist.sort(key=str.lower)#按照字母顺序对列表元素排序 pdfwriter=PyPDF2.PdfFileWriter() for filename in pdflist: pdffile=open(path+filename,&amp;#39;rb&amp;#39;) pdfreader=PyPDF2.PdfFileReader(pdffile) for page in range(1,pdfreader.numPages):#去除封面 pagepdf=pdfreader.getPage(page)#获取页面 pdfwriter.addPage(pagepdf)#添加页面 pdfoutput=open(&amp;#39;D:/temp/hebing.pdf&amp;#39;,&amp;#39;wb&amp;#39;) pdfwriter.write(pdfoutput) pdfoutput.close() import PyPDF2 import os def get_file_list(org_path): pdf_list = [] file_list = os.listdir(org_path) for file_name in file_list: if file_name.lower().endswith(&amp;#39;.pdf&amp;#39;): pdf_list.append(file_name) pdf_list.sort(key=str.lower) pdf_list = [os.path.join(org_path, item) for item in pdf_list] return pdf_list def write_pdf(org_pdfs, out_pdf): pdf_writer = PyPDF2.PdfFileWriter() org_handle_list = [] for pdf_file in org_pdfs: pdf_handle = open(pdf_file, &amp;#39;rb&amp;#39;) org_handle_list.</description></item></channel></rss>