<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Code on Vicky's Notes</title><link>https://yayavicky.github.io/categories/code/</link><description>Recent content in Code on Vicky's Notes</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Except where otherwise noted, content on this site is licensed under a [Creative Commons Attribution 4.0 International license](https://creativecommons.org/licenses/by-sa/4.0/).</copyright><lastBuildDate>Thu, 09 Dec 2021 15:10:08 +0800</lastBuildDate><atom:link href="https://yayavicky.github.io/categories/code/index.xml" rel="self" type="application/rss+xml"/><item><title>Python</title><link>https://yayavicky.github.io/code/python/</link><pubDate>Thu, 09 Dec 2021 15:10:08 +0800</pubDate><guid>https://yayavicky.github.io/code/python/</guid><description>字典扩展类 原来需要这样用：dic['website'] = 'taobao.com' 有了这个类，可以这样用：dic.websites = 'taobao.com'
class EasyAccessDict(dict): def __getattr__(self,name): if name in self: return self[name] n=easyaccessdict() super().__setitem__(name, n) return n def __getitem__(self,name): if name not in self: super().__setitem__(name,nicedict()) return super().__getitem__(name) def __setattr__(self,name,value): super().__setitem__(name,value)</description></item><item><title>Software Version Rules</title><link>https://yayavicky.github.io/code/softversion/</link><pubDate>Sat, 02 Jan 2021 13:07:40 +0800</pubDate><guid>https://yayavicky.github.io/code/softversion/</guid><description>比较普遍的命名方式： 1、GUN风格： 主版本号.子版本号[.修正版本号[.编译版本号]] Major_Version_Number.Minor_Version_Number[.Revision_Number[.Build_Number]] 示例：1.2.1 、 2.0 、 5.0.0 build-13124
2、Windows风格： 主版本号.子版本号[.修正版本号[.编译版本号]] Major_Version_Number.Minor_Version_Number[.Revision_Number[.Build_Number]] 示例：1.2.1 、 2.0
3、.Net Framework风格： 主版本号.子版本号[.编译版本号[.修正版本号]] Major_Version_Number.Minor_Version_Number[.Build_Number[.Revision_Number]] 版本号由二到四部分组成：主版本号、次版本号、内部版本号、修订号。主版本号和次版本号是必选的，内部版本号和修订号是可选的。但是如果定义了修订号部分，则内部版本号就是必选的。所有定义的部分都必须是大于或者等于0的整数。
应根据约定使用下面这些部分：
Major：具有相同名称但不同主版本号的程序集不可互换。它适用于对产品的大量重写，或战略性转变，且无法实现向后兼容性。 Minor：如果两个程序集的名称和主版本号相同，而次版本号不同，但照顾了向后兼容性。它适用于产品的修正版或完全向后兼容的新版本。 Build：内部版本号的不同，表示对相同源所做的重新编译。它适合于更改处理器、平台或编译器的情况。 Revision：名称、主版本号、次版本号都相同，但修订号不同的程序集应该是完全可以互换的。它适用于修复以前发布的程序集中的安全漏洞。 只有内部版本号或修订号不同的程序集后续版本，才可以被认为是先前版本的修补程序（Hotfix）更新。
版本号管理策略： 1、GUN风格： 产品初版时，版本号可以为0.1或0.1.0，也可以为1.0或1.0.0； 当产品进行了局部修改或bug修正时，主版本号和子版本号都不变，修正版本号+1； 当产品在原有的基础上增加了部分功能时，主版本号不变，子版本号+1，修正版本号复位为0； 当产品进行了重大修改或局部修正累计较多，而导致产品整体发生全局变化的，主版本号+1； 编译版本号，一般是编译器在编译过程中自动生成的，我们只定义其格式，并不进行人为控制； 2、Windows风格： 产品初版时，版本号为1.0或1.0.0； 当产品进行了局部修改或bug修正时，主版本号和子版本号都不变，修正版本号+1； 当产品在原有的基础上增加了部分功能时，主版本号不变，子版本号+1，修正版本号复位为0； 当产品进行了重大修改或局部修正累计较多，而导致产品整体发生全局变化的，主版本号+1； 编译版本号，一般是编译器在编译过程中自动生成的，我们只定义其格式，并不进行人为控制； 一些付费软件在升级的时候也需要购买，那么这个所谓的升级，一般是指主版本号的变更。
另外，还可以在版本号后面加上Alpha、Beta、Gamma、Current、RC（Release Candidate）、Release、Stable等后缀，在这些后缀后面还可以加上1位数字的版本号。
Android版本号： 1、主版本号变化 Android2.x：仅支持手机等小平移动设备； Android3.x：只支持平板和电视等大屏设备； Android4.x：合并了2.x和3.x，支持多种设备； 2、次版本号变化 功能增加；
3、维护版本号变化 修复漏洞、bug；
4、构建版本号变化 变化周期频繁且不固定，针对开发人员内部使用；
内部测试版本号使用建议：
主版本号.次（子）版本号.修正版本号.日期版本号_阶段版本号_（修改次数）_开发者缩写
例如：1.0.1.150325_beta_b3_ZainF
附录： α（alpha）内部测试版 α版表示该产品只是一个初步完成的产品，通常只用于在开发者内部交流，也有很少一部分发布给专业的测试人员，一般情况下，该版本会存在较多bug，不适合普通用户使用。
β（Beta）外部测试版 该版本相对于α版已经有了很大改进，消除了严重的错误，但可能依然存在一些缺陷，需要经过大规模的发布测试进一步发现、消除错误。这一版本通常由软件公司免费发布，通过一些专业的爱好者测试，将结果反馈给开发人员，开发者们再进行有针对性的修改，该版本一般不适合普通用户大规模安装使用。</description></item><item><title>Qt5</title><link>https://yayavicky.github.io/code/qt5/</link><pubDate>Sat, 01 Feb 2020 11:57:03 +0800</pubDate><guid>https://yayavicky.github.io/code/qt5/</guid><description>资源 ui framework How to make Icon in QMenu larger (PyQt)?</description></item></channel></rss>