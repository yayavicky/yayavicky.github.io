<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Setting on Vicky's Notes</title><link>https://yayavicky.github.io/categories/setting/</link><description>Recent content in Setting on Vicky's Notes</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Except where otherwise noted, content on this site is licensed under a [Creative Commons Attribution 4.0 International license](https://creativecommons.org/licenses/by-sa/4.0/).</copyright><lastBuildDate>Tue, 30 Nov 2021 11:12:48 +0800</lastBuildDate><atom:link href="https://yayavicky.github.io/categories/setting/index.xml" rel="self" type="application/rss+xml"/><item><title>群晖设置</title><link>https://yayavicky.github.io/env/nas/</link><pubDate>Tue, 30 Nov 2021 11:12:48 +0800</pubDate><guid>https://yayavicky.github.io/env/nas/</guid><description>直接使用套件中心 套件中心添加https://www.cphub.net 社区套件源，然后直接安装。
使用离线 ipk 文件。 打开 community package hub，选择你的固件型号：
下载 Easy Bootstrap Installer 与 iPKGui 两个套件安装包。
安装 Easy Bootstrap Installer 主要为 ipkg 或 opkg 环境，iPKGui 则为 ipkg 的图形界面。因此，我们需要先安装 Easy Bootstrap Installer 后安装 iPKGui 。　打开群晖 套件中心，选择 手动安装，选择刚才下载好的 Easy Bootstrap Installer spk 文件，依照提示安装后重启群晖即可。（需要注意的是，在装 Easy Bootstrap Installer 的过程中，由于会对源做刷新动作，而 ipkg 的源又被墙了，所以在网络状况不好的情况下，会非常慢。 ）　之后使用 ssh 连接并群晖获取 root 权限 ，执行 ipkg 能够正确执行后，依照前面方式在套件中心安装 iPKGui 的 spk 文件即可。至此，整个流程结束，完成 ipkg 的环境配置。
安装其他包 sudo /opt/bin/opkg update sudo /opt/bin/opkg install lsof sudo /opt/bin/lsof | grep deleted sudo kill -9 PID df -i df -h ls /dev/md* /dev/md0 /dev/md1 /dev/md2 sudo mdadm --detail /dev/md0 /dev/md1</description></item><item><title>Vmware Auto Act</title><link>https://yayavicky.github.io/tools/vmware/</link><pubDate>Thu, 25 Nov 2021 08:58:02 +0800</pubDate><guid>https://yayavicky.github.io/tools/vmware/</guid><description>Vmware 开机 vmrun -T (ws|fusion|player) start &amp;#34;指定虚拟机vmx文件路径&amp;#34; [gui|nogui] vmrun -T ws start &amp;#34;D:\VirtualBox VMs\openwrt\openwrt.vmx&amp;#34; nogui ws 代表workstation, nogui 代表无界面后台运行。
1. 用组策略来实现 组合键(Windows键+R键) 在 “运行” 中输入 gpedit.msc 打开组策略编辑器。
在组策略中，依次选择
用户配置—Windows设置—脚本(登录|注销) 右边，名称下选择 “登录”
2. 命令创建一个快捷方式，将其放入启动文件夹 打开运行或者文件资源管理器，输入 shell:startup ，打开启动文件夹，或者直接打开目录 %appdata%\Microsoft\Windows\Start Menu\Programs\Startup ，将快捷方式放进去。
Vmware 关机 # 挂起 vmrun -T (ws|fusion|player) suspend &amp;#34;指定虚拟机vmx文件路径&amp;#34; # 关机 vmrun -T (ws|fusion|player) stop &amp;#34;指定虚拟机vmx文件路径&amp;#34; soft soft 不可漏，会使虚拟机执行操作系统指定的关机程序
gpedit.msc 本地计算机策略 - 计算机配置 - Windows设置 - 脚本 右侧选择关机 将需要执行的关机或挂起命令写入 bat 文件 ssh 远程关机 /sbin/shutdown.</description></item><item><title>mklink 命令找不到</title><link>https://yayavicky.github.io/env/mklink/</link><pubDate>Mon, 21 Dec 2020 08:35:00 +0800</pubDate><guid>https://yayavicky.github.io/env/mklink/</guid><description> 输入 secpol.msc 本地策略 用户权限分配 创建符号链接 添加用户或组</description></item><item><title>Esxi Auto Close When Power Off</title><link>https://yayavicky.github.io/env/esxiclose/</link><pubDate>Wed, 16 Dec 2020 17:19:19 +0800</pubDate><guid>https://yayavicky.github.io/env/esxiclose/</guid><description>from
开启ESXI的ssh功能，并ssh登录ESXI创建ups脚本 1 进入到ESXI web控制台，开启ssh功能 2 ssh连接到ESXI，创建必要文件及脚本 脚本逻辑： 每1分钟ping一次指定IP，每次只ping一次，如果达到2次，三分钟后再ping一次，此时如果还是不通，就记录时间写入日志到ups.log，并执行关机命令，具体时间和逻辑你可以随意更改：
[root@localhost:~] cd /vmfs/volumes/data #cd到对应硬盘卷，以你的硬盘命名为准 [root@localhost:/vmfs/volumes/5f174c56-6a79f5cc-c990-a03e6ba0a187]mkdir ups [root@localhost:/vmfs/volumes/5f174c56-6a79f5cc-c990-a03e6ba0a187]cd ups [root@localhost:/vmfs/volumes/5f174c56-6a79f5cc-c990-a03e6ba0a187/ups]touch ups.log #写日志用 [root@localhost:/vmfs/volumes/5f174c56-6a79f5cc-c990-a03e6ba0a187/ups]vim ups.sh #创建以下脚本 #!/bin/sh UPS_LOG=/vmfs/volumes/data/ups/ups.log count=0 IP=192.168.1.200 # 写你的网关IP，只要是断电ping不通的IP都行 while :;do ping -c 1 $IP &amp;gt; /dev/null if [ $? -eq 0 ]; then : else count=$(expr $count + 1); fi sleep 60 if [ $count -ge 2 ]; then echo &amp;#34;$(date)AC Power maybe off, checking again after 3 minutes !</description></item></channel></rss>